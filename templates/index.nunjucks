{% extends "layout.nunjucks" %}

{% block content %}
<div class="row">
  <div class="col s12">
    <div class="card blue-grey darken-1">
      <div class="card-content white-text">
        <span class="card-title">Welcome</span>
        <p>This app is the tinder of hackathon ideas</p>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <div class="col s12">
    <div class="card">
      <div class="card-content">
        <div>
  <h2>Inspiration</h2>

<p>When we arrived we had no idea what we are going to build and half an hour into Hack the Holidays we still had no idea. So we pulled random and weird ideas out of our heads until we came up with: Hackindr - Tinder for Hackathon Ideas! However, this idea was quickly sidelined by the arrival of the MLH hardware lab and the realisation that I had bought my Passport. The next few hours were spent renting out a selection of hardware, from Oculus Rifts to Leap Motions, and we quickly came up with the idea of a virtual keyboard that allowed you to type in midair using the Leap Motion. But we had little success with tracking individual fingers with enough accuracy so we attempted to use the Thalmic Myo to create a morse code keyboard but we also ran into problems. So, driven by our aim to actually finish a hack within 24 hours we returned to Hackindr.</p>

<h2>What it does</h2>

<p>Hackindr is a mobile and web app that allows users to like or dislike random hackathon ideas, see the top ten ideas and submit their own.</p>

<h2>How we built it</h2>

<p>Firstly, we built a REST API using Python, Flask and Postgres which was deployed on Heroku. We then connected this to our native Android app written into Java. We then built a web interface, originally using Angular, but ended up being built in Node.js and Express.js and hosted on Heroku. Finally, we also began to work on an iOS version using Swift.</p>

<h2>Challenges we ran into</h2>

<p>After encountering problems with Thalmic Myo and Leap Motion we were hoping for Hackindr to relatively problem free, however, this was not the case. Our first major problem was when the backend suddenly stopped accepting valid usernames and passwords which was solved by turning it off and on again. Our next problem was trying to figure out how to make HTTP requests in Swift which was eventually solved. Additionally, we encountered a nearly infinite series of NullPointerExceptions in Android app which were mostly caused by ourselves accidently deleting lines in our sleep deprived haze.</p>

<h2>Accomplishments that we're proud of</h2>

<p>Overall, we are really impressed by the fact we actually finished our hack with the web and android versions working before 9am.</p>

</div>

      </div>
    </div>
  </div>
</div>
{% endblock %}
